public class Lesson_1_5 {
    public static void main(String[] args) {
        task4();
    }

    //    1 задача
//    Объявите три массива:
//    1. Целочисленный массив, заполненный тремя цифрами – 1, 2 и 3 – с помощью ключевого слова new.
//    2. Массив, в котором можно хранить три дробных числа – 1.57, 7.654, 9.986 –  сразу заполнив его значениями.
//    3. Произвольный массив – тип и количество данных определите сами.
//    Самостоятельно выберите способ создания массива: с помощью ключевого слова или сразу заполненный элементами.
    private static void task1() {
        int[] arr1 = new int[3];
        arr1[0] = 1;
        arr1[1] = 2;
        arr1[2] = 3;
        double[] arr2 = {1.57, 7.654, 9.986};
        int[] arr3 = new int[]{4, 5, 6};
    }

    //   2 задача
//    Пройдите по каждому из трех массивов и распечатайте все элементы всех трех массивов, начиная с первого элемента, через запятую.
//    Запятая между последним элементом одного массива и первым элементом следующего не нужна.
    private static void task2() {
        int[] arr1 = new int[3];
        arr1[0] = 1;
        arr1[1] = 2;
        arr1[2] = 3;
        double[] arr2 = {1.57, 7.654, 9.986};
        int[] arr3 = new int[]{4, 5, 6, 7};
        for (int i = 0; i < arr1.length; i++) {
            if (i != arr1.length - 1) {
                System.out.print(arr1[i] + ", ");
            } else {
                System.out.print(arr1[i]);
            }
        }
        System.out.println();
        for (int j = 0; j < arr2.length; j++) {
            if (j != arr2.length - 1) {
                System.out.print(arr2[j] + ", ");
            } else {
                System.out.print(arr2[j]);
            }
        }
        System.out.println();
        for (int v = 0; v < arr3.length; v++) {
            if (v != arr3.length - 1) {
                System.out.print(arr3[v] + ", ");
            } else {
                System.out.print(arr3[v]);
            }
        }
    }

    //    3 задача
//
//    Теперь ваша задача – распечатать все элементы всех трех массивов, но начинать нужно не с первого элемента массива, а с последнего.
//    Элементы должны быть распечатаны через запятую, при этом элементы одного массива располагаются на одной строчке, а элементы другого массива – на другой.
//    Запятая между последним элементом одного массива и первым элементом следующего не нужна.
//    Если во втором задании в консоль у вас вывелся результат
//    1, 2, 3
//    1.57, 7.654, 9.986
//    произвольные элементы третьего массива
//    То в третьем задании результат должен быть
//    3, 2, 1
//    9.986, 7.654, 1.57
//    произвольные элементы третьего массива в обратном порядке
    private static void task3() {
        int[] arr1 = new int[3];
        arr1[0] = 1;
        arr1[1] = 2;
        arr1[2] = 3;
        double[] arr2 = {1.57, 7.654, 9.986};
        int[] arr3 = new int[]{4, 5, 6, 7};
        for (int i = arr1.length - 1; i >= 0; i--) {
            if (i != 0) {
                System.out.print(arr1[i] + ", ");
            } else {
                System.out.print(arr1[i]);
            }
        }
        System.out.println();
        for (int j = arr2.length - 1; j >= 0; j--) {
            if (j != 0) {
                System.out.print(arr2[j] + ", ");
            } else {
                System.out.print(arr2[j]);
            }
        }
        System.out.println();
        for (int v = arr3.length - 1; v >= 0; v--) {
            if (v != 0) {
                System.out.print(arr3[v] + ", ");
            } else {
                System.out.print(arr3[v]);
            }
        }
    }

    //    4 задача
//    Пройдитесь по первому целочисленному массиву и все нечетные числа в нем сделайте четными (нужно прибавить 1).
//    Важно: код должен работать с любым целочисленным массивом, поэтому для решения задания вам нужно использовать циклы.
//    Распечатайте результат преобразования в консоль.
    private static void task4() {
        int[] arr1 = new int[3];
        arr1[0] = 1;
        arr1[1] = 2;
        arr1[2] = 3;
        for (int i = 0; i < arr1.length; i++) {
            if (arr1[i] % 2 != 0) {
                arr1[i]++;
            }
            System.out.print(arr1[i]);
            if (i != arr1.length - 1) {
                System.out.print(", ");
            }
        }
    }
}


